{"version":3,"sources":["webpack:///./src/components/Feed/Feed.js","webpack:///./src/components/Feed/index.js","webpack:///./node_modules/classnames/bind.js","webpack:///./src/templates/tag-template.js","webpack:///./src/components/Pagination/Pagination.js","webpack:///./src/components/Pagination/index.js"],"names":["Feed","edges","className","styles","map","edge","key","node","fields","slug","dateTime","moment","frontmatter","date","format","to","title","description","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","this","Array","isArray","apply","call","join","module","exports","query","TagTemplate","data","pageContext","useSiteMetadata","siteTitle","siteSubtitle","subtitle","tag","currentPage","prevPagePath","nextPagePath","hasPrevPage","hasNextPage","allMarkdownRemark","pageTitle","cx","bind","Pagination","prevClassName","nextClassName","rel","PAGINATION","PREV_PAGE","NEXT_PAGE"],"mappings":"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","file":"component---src-templates-tag-template-js-53ebfc135ae28611466d.js","sourcesContent":["// @flow strict\r\nimport React from 'react';\r\nimport moment from 'moment';\r\nimport { Link } from 'gatsby';\r\nimport type { Edges } from '../../types';\r\nimport styles from './Feed.module.scss';\r\nimport ScrollUpButton from \"react-scroll-up-button\"; //Add this line Here\r\n\r\ntype Props = {\r\n  edges: Edges\r\n};\r\n\r\nconst Feed = ({ edges }: Props) => (\r\n\r\n  <div className={styles['feed']}>\r\n    {edges.map((edge) => (\r\n      \r\n      <div className={styles['feed__item']} key={edge.node.fields.slug}>\r\n        <div className={styles['feed__item-meta']}>\r\n          <time className={styles['feed__item-meta-time']} dateTime={moment(edge.node.frontmatter.date).format('MMMM D, YYYY')}>\r\n            {moment(edge.node.frontmatter.date).format('D MMMM YYYY')}\r\n          </time>\r\n          <span className={styles['feed__item-meta-divider']} />\r\n        </div>\r\n        <h2 className={styles['feed__item-title']}>\r\n          <Link className={styles['feed__item-title-link']} to={edge.node.fields.slug}>{edge.node.frontmatter.title}</Link>\r\n        </h2>\r\n        <p className={styles['feed__item-description']}>{edge.node.frontmatter.description}</p>\r\n        <Link className={styles['feed__item-button']} to={edge.node.fields.slug}>Read</Link>\r\n      </div>\r\n    ))}\r\n    <ScrollUpButton />\r\n  </div>\r\n  \r\n);\r\n\r\nexport default Feed;\r\n","// @flow strict\r\nexport { default } from './Feed';\r\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(this && this[arg] || arg);\n      } else if (Array.isArray(arg)) {\n        classes.push(classNames.apply(this, arg));\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(this && this[key] || key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","// @flow strict\r\nimport React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '../components/Layout';\r\nimport Sidebar from '../components/Sidebar';\r\nimport Feed from '../components/Feed';\r\nimport Page from '../components/Page';\r\nimport Pagination from '../components/Pagination';\r\nimport { useSiteMetadata } from '../hooks';\r\nimport type { AllMarkdownRemark, PageContext } from '../types';\r\n\r\ntype Props = {\r\n  data: AllMarkdownRemark,\r\n  pageContext: PageContext\r\n};\r\n\r\nconst TagTemplate = ({ data, pageContext }: Props) => {\r\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\r\n\r\n  const {\r\n    tag,\r\n    currentPage,\r\n    prevPagePath,\r\n    nextPagePath,\r\n    hasPrevPage,\r\n    hasNextPage\r\n  } = pageContext;\r\n\r\n  const { edges } = data.allMarkdownRemark;\r\n  const pageTitle = currentPage > 0 ? `All Posts tagged as \"${tag}\" - Page ${currentPage} - ${siteTitle}` : `All Posts tagged as \"${tag}\" - ${siteTitle}`;\r\n\r\n  return (\r\n    <Layout title={pageTitle} description={siteSubtitle}>\r\n      <Sidebar />\r\n      <Page title={tag}>\r\n        <Feed edges={edges} />\r\n        <Pagination\r\n          prevPagePath={prevPagePath}\r\n          nextPagePath={nextPagePath}\r\n          hasPrevPage={hasPrevPage}\r\n          hasNextPage={hasNextPage}\r\n        />\r\n      </Page>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\nquery TagPage($tag: String, $postsLimit: Int!, $postsOffset: Int!) {\r\n  site {\r\n    siteMetadata {\r\n      title\r\n      subtitle\r\n    }\r\n  }\r\n  allMarkdownRemark(\r\n      limit: $postsLimit,\r\n      skip: $postsOffset,\r\n      filter: { frontmatter: { tags: { in: [$tag] }, template: { eq: \"post\" } } },\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n    ){\r\n    edges {\r\n      node {\r\n        fields {\r\n          slug\r\n          \r\n        }\r\n        frontmatter {\r\n          title\r\n          date\r\n          categories\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport default TagTemplate;\r\n","// @flow strict\r\nimport React from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport { Link } from 'gatsby';\r\nimport { PAGINATION } from '../../constants';\r\nimport styles from './Pagination.module.scss';\r\n\r\ntype Props = {\r\n  prevPagePath: string,\r\n  nextPagePath: string,\r\n  hasNextPage: boolean,\r\n  hasPrevPage: boolean\r\n};\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Pagination = ({\r\n  prevPagePath,\r\n  nextPagePath,\r\n  hasNextPage,\r\n  hasPrevPage\r\n}: Props) => {\r\n  const prevClassName = cx({\r\n    'pagination__prev-link': true,\r\n    'pagination__prev-link--disable': !hasPrevPage\r\n  });\r\n\r\n  const nextClassName = cx({\r\n    'pagination__next-link': true,\r\n    'pagination__next-link--disable': !hasNextPage\r\n  });\r\n\r\n  return (\r\n    <div className={styles['pagination']}>\r\n      <div className={styles['pagination__prev']}>\r\n        <Link rel=\"prev\" to={hasPrevPage ? prevPagePath : '/'} className={prevClassName}>{PAGINATION.PREV_PAGE}</Link>\r\n      </div>\r\n      <div className={styles['pagination__next']}>\r\n        <Link rel=\"next\" to={hasNextPage ? nextPagePath : '/'} className={nextClassName}>{PAGINATION.NEXT_PAGE}</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow strict\r\nexport { default } from './Pagination';\r\n"],"sourceRoot":""}